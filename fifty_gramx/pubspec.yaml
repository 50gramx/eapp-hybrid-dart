name: fifty_gramx
description: Your. Unified. Simple. Secure. Internet.

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 24.11.13

environment:
  sdk: ">=3.4.4"

dependencies:
  flutter:
    sdk: flutter
  platform: ^3.1.0
  grpc: ^3.0.0
  protobuf: ^3.0.0
  shared_preferences: ^2.2.2
  firebase_analytics: ^10.8.0
  firebase_core: ^2.24.2
  firebase_messaging: ^14.7.5
  firebase_crashlytics: ^3.4.5
  firebase_performance_platform_interface: ^0.1.4+13
  overlay_support: ^2.1.0
  flutter_neumorphic:
    git:
      url: https://github.com/den0206/Flutter-Neumorphic.git
      ref: 23af54ff4f92dca92f7deaab09338885568bca48
  flutter_launcher_icons: ^0.13.1
  desktop_window: ^0.4.0
  flutter_feather_icons: ^2.0.0+1
  async: ^2.6.1
  bubble: ^1.2.1
  # dart_eval is an extensible bytecode compiler and runtime for the Dart language,
  # written in Dart, enabling dynamic codepush for Flutter and Dart AOT.
  dart_eval: ^0.7.1
  datetime_picker_formfield_new: ^2.1.0
  intl: ^0.18.1
  flutter_switch: ^0.3.1
  rxdart: ^0.27.1
  http: ^1.1.0
  smooth_page_indicator: ^1.1.0
  file_picker: ^6.1.1
  # A storefront-independent API for purchases in Flutter apps.
  # This plugin supports in-app purchases (IAP) through an underlying store,
  # which can be the App Store (on iOS and macOS) or Google Play (on Android).
  in_app_purchase: ^3.1.7
  # A Flutter plugin for opening iOS and Android phone settings from an app.
  app_settings: ^5.1.1
  # A Flutter plugin to access and manage the device's contacts.
  contacts_service: ^0.6.3
  #  msix: ^2.1.3
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  # Get current device information from within the Flutter application.
  device_info_plus: ^9.1.1
  # A cross platform plugin for displaying local notifications.
  flutter_local_notifications: ^16.1.0
  # A Flutter plugin for finding commonly used locations on the filesystem. Supports Android, iOS,
  # Linux, macOS and Windows. Not all methods are supported on all platforms.
  path_provider: ^2.1.4
  # manages all the device level permissions
  permission_handler: ^10.4.3
  # Process run helpers for Linux/Win/Mac.
  process_run: ^0.13.0
  # A library that exposes device specific speech recognition capability.
  speech_to_text: ^6.4.1
  # A Dart package which parses total and available disk spaces on
  # Windows and UNIX-based systems (including Linux and macOS).
  universal_disk_space: ^0.2.3
  # A parser for YAML.
  yaml: ^3.1.2
  # A Flutter plugin for launching a URL.
  url_launcher: ^6.0.10
  # String validation and sanitization for Dart. Dart 2-compatible version of validator
  validators: ^3.0.0
  # This Flutter plugin provides an API for querying information about an application package.
  package_info_plus: ^4.2.0
  # xterm.dart is a fast and fully-featured terminal emulator for Flutter applications, with support for mobile and desktop platforms.
  xterm: ^4.0.0
  # SSH and SFTP client written in pure Dart, aiming to be feature-rich as well as easy to use
  # dartssh2: ^2.8.2 # TODO (khetana@): uncomment after this issue is fixed (https://github.com/TerminalStudio/dartssh2/issues/105)
  # provides cross-platform StreamChannel wrappers for WebSocket connections
  web_socket_channel: ^3.0.0
  flutter_web_plugins:
    sdk: flutter
  carousel_slider_plus: ^6.0.0
  eapp_dart_domain:
    hosted: https://dart.pkg.jetbrains.space/50gramx/p/main/dart-delivery/
    version: ^24.1.107
  # win32 is a Dart package that provides access to the most common Win32 APIs 
  # using FFI to make them accessible to Dart code without requiring a C compiler or the Windows SDK.
  win32: ^5.5.3
  # This package builds on top of the Dart win32 package, offering a high-level Dart wrapper 
  # that avoids the need for users to understand FFI or write directly to the Win32 API.
  win32_registry: ^1.1.4
  # A Dart library to encode and decode various archive and compression formats.
  archive: ^3.6.1
  # PineNaCl is a Dart implementation of the TweetNaCl 
  # the world's first auditable high-security cryptographic library.
  pinenacl: ^0.6.0
  # A powerful HTTP networking package for Dart/Flutter, 
  # supports Global configuration, Interceptors, FormData, 
  # Request cancellation, File uploading/downloading, Timeout, 
  # Custom adapters, Transformers, etc.
  dio: ^5.6.0
  # Load configuration at runtime from a .env file which can be used
  # throughout the application.
  flutter_dotenv: ^5.1.0

flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: "common-assets/icon/icon.png"

dev_dependencies:
  flutter_test:
    sdk: flutter

  # A fully featured Gherkin parser and test runner. Works with Flutter and Dart 2.
  flutter_gherkin: ^2.0.0
  msix: ^3.16.8

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - ethosapps.env
    - lib/assets/certs/identityServer.crt
    - lib/assets/certs/conversationServer.crt
    - lib/assets/certs/knowledgeServer.crt
    # assets of 70GRAMx
    #   Ethos Pods
    #     Orchestrator Setup Scripts
    # 50GRAMx
    - lib/community/apps/gramx/fifty/zero/ethosapps.yaml
    # 50GRAMx Ethos
    - lib/community/apps/gramx/fifty/zero/ethos/site/
    - lib/community/onboarding/website/home_page/assets/Designer.jpeg
    - lib/community/onboarding/website/home_page/assets/Designer-2.jpeg
    - lib/community/apps/gramx/fifty/zero/ethos/identity/
    - lib/community/apps/gramx/fifty/zero/ethos/get_started/
    - lib/community/apps/gramx/fifty/zero/ethos/domains/
    - lib/community/apps/gramx/fifty/zero/ethos/knowledge_spaces/
    - lib/community/apps/gramx/fifty/zero/ethos/spaces/
    - lib/community/apps/gramx/fifty/zero/ethos/conversations/
    - lib/community/apps/gramx/fifty/zero/ethos/connections/
    - lib/community/apps/gramx/fifty/zero/ethos/browser/
    # 52GRAMx
    - lib/community/apps/gramx/fifty/two/ethosapps.yaml
    # 52GRAMx Ethos
    - lib/community/apps/gramx/fifty/two/ethos/pay/
    # 55GRAMx
    - lib/community/apps/gramx/fifty/five/ethos/ethosapps.yaml
    # 55GRAMx Ethos
    - lib/community/apps/gramx/fifty/five/ethos/eutopia/
    # 70GRAMx
    # 70GRAMx Ethos
    - lib/community/apps/gramx/seventy/zero/ethos/pods/configurations/orchestrator/setup/scripts/
    #     multiverse resources
    #       cluster resources
    - lib/community/apps/gramx/seventy/zero/ethos/pods/configurations/multiverse/resources/cluster/
    #       namespaced resources
    - lib/community/apps/gramx/seventy/zero/ethos/pods/configurations/multiverse/resources/namespaced/
    #       persona resources
    - lib/community/apps/gramx/seventy/zero/ethos/pods/configurations/multiverse/resources/persona/
    # 70 community eapp common-assets
    - lib/community/apps/gramx/seventy/zero/ethosapps.yaml
    # 70 ethos pods app assets
    - lib/community/apps/gramx/seventy/zero/ethos/pods/
    - lib/community/apps/gramx/seventy/zero/ethos/entities/
    - lib/community/apps/gramx/seventy/zero/gs/weather/
    - lib/community/apps/gramx/seventy/zero/bp/ai/
    - lib/community/apps/gramx/seventy/zero/ethos/pods-gpu-pricing/
    - lib/community/apps/gramx/seventy/zero/ethos/pods-gpu-template/
    - lib/community/apps/gramx/seventy/zero/ethos/pods-gpu-cli/
    - lib/community/apps/gramx/seventy/zero/ethos/pods-gpu-manage/
    - lib/community/apps/gramx/seventy/zero/ethos/nodes/
    # 88 community eapp common-assets
    - lib/community/apps/gramx/eighty/eight/ethosapps.yaml
    # 88 ethos connect app assets
    - lib/community/apps/gramx/eighty/eight/ethos/connect/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Montserrat
      fonts:
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Regular.ttf
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Italic.ttf
          style: italic
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Thin.ttf
          weight: 100
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-ExtraLight.ttf
          weight: 200
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Light.ttf
          weight: 300
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Regular.ttf
          weight: 400
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Medium.ttf
          weight: 500
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-SemiBold.ttf
          weight: 600
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Black.ttf
          weight: 700
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Black.ttf
          weight: 800
        - asset: lib/community/apps/gramx/fifty/five/ethos/level/fonts/Montserrat/Montserrat-Black.ttf
          weight: 900
  #     - family: Trajan Pro
  #       fonts:
  #         - asset: fonts/TrajanPro.ttf
  #         - asset: fonts/TrajanPro_Bold.ttf
  #           weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

msix_config:
  display_name: 50GRAMx Ethos Nodes
  publisher_display_name: Amit Khetan
  identity_name:  11781AppsHub.50GRAMxEthosNodes
  family_name: 11781AppsHub.50GRAMxEthosNodes_q0s66045s37ha
  msix_version: 24.2.1.0
  certificate_path: C:\Users\amitk\Documents\CERTIFICATE.pfx
  certificate_password: getethos
  app_installer:
    publish_folder_path: C:\Users\amitk\Documents
  publisher: CN=D4AFB810-EF13-46E0-8839-A4A110696588
  #  logo_path: C:\<PathToIcon>\<Logo.png>
  #  start_menu_icon_path: C:\<PathToIcon>\<Icon.png>
  #  tile_icon_path: C:\<PathToIcon>\<Icon.png>
  #  vs_generated_images_folder_path: C:\<PathToFolder>\icons
  #  icons_background_color: transparent
  architecture: x64
  capabilities: "internetClient,microphone"
