<!--
  ~ /*************************************************************************
  ~ *
  ~ * AMIT KUMAR KHETAN CONFIDENTIAL
  ~ * __________________
  ~ *
  ~ *  [2017] - [2022] Amit Kumar Khetan
  ~ *  All Rights Reserved.
  ~ *
  ~ * NOTICE:  All information contained herein is, and remains
  ~ * the property of Amit Kumar Khetan and its suppliers,
  ~ * if any.  The intellectual and technical concepts contained
  ~ * herein are proprietary to Amit Kumar Khetan
  ~ * and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ * patents in process, and are protected by trade secret or copyright law.
  ~ * Dissemination of this information or reproduction of this material
  ~ * is strictly forbidden unless prior written permission is obtained
  ~ * from Amit Kumar Khetan.
  ~ */
  -->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.fiftygramx.ethosai">

    <application
        android:name="androidx.multidex.MultiDexApplication"
        android:icon="@mipmap/launcher_icon"
        android:label="evo by 50GRAMx">
        <activity
            android:name=".MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:exported="true"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />
            <!-- Displays an Android View that continues showing the launch screen
                 Drawable until Flutter paints its first frame, then this splash
                 screen fades out. A splash screen is useful to avoid any visual
                 gap between the end of Android's launch screen and the painting of
                 Flutter's first frame. -->
            <meta-data
                android:name="io.flutter.embedding.android.SplashScreenDrawable"
                android:resource="@drawable/launch_background" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />

    </application>

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="com.android.vending.BILLING" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.WRITE_CONTACTS" />
    <uses-permission android:name="com.google.android.gms.permission.AD_ID" />

</manifest>
