
FROM web-base:latest AS builder

# Install necessary packages and Flutter SDK
RUN apt-get update && \
    apt-get install -y git curl unzip && \
    rm -rf /var/lib/apt/lists/*

# Clone the Flutter repository
RUN git clone https://github.com/flutter/flutter.git /flutter

# Set the Flutter home and add it to PATH
ENV FLUTTER_HOME=/flutter
ENV PATH="$FLUTTER_HOME/bin:$PATH"

# Ensure that the flutter directory is safe for git
RUN git config --global --add safe.directory /flutter

# Create a user for building the application
RUN useradd -m flutteruser

# Copy the application source code
COPY --chown=flutteruser:flutteruser . /fifty_gramx

# Set the working directory
WORKDIR /fifty_gramx

# Switch to the flutteruser for building
USER flutteruser

# Run the build steps
RUN flutter clean && \
    dart pub token add https://dart.pkg.jetbrains.space/50gramx/p/main/dart-delivery/ --env-var=PACKGAGES_READ_TOKEN && \
    flutter pub get && \
    flutter pub cache repair && \
    flutter build web --release

# Stage 2: Create a lightweight Nginx image to serve the built web app
FROM nginx:latest

# Copy the build output from the builder stage to the Nginx HTML directory
COPY --from=builder /fifty_gramx/build/web /usr/share/nginx/html

# Expose port 80 for Nginx
EXPOSE 80

# Command to run Nginx in the foreground
CMD ["nginx", "-g", "daemon off;"]
